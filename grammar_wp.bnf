<meth_or_fun> 	::= <method> | <function>
<Program> 	::=  <meth_or_fun> | <Program> <sp> <meth_or_fun> <esp>
<function> 	::= '('<sp> 'fun' <sp> '(' <sp> <Name> <esp> <arglist> <sp>')' <sp> <instr_list> <sp>')' |  '('<sp> 'fun' <sp> '(' <sp> <Name> <sp> ')' <sp> <instr_list> <sp>')' 
<arglist> 	::= <Id> | <Id> <esp> <arglist>
<methode> 	::= '('<sp> 'method' <sp> '('<sp> <Number> <sp>')' <sp> '(' <sp> <Name> <esp> <arglist> <sp> ')' <instr_list>  <sp> ')' |   '('<sp> 'method' <sp> '('<sp> <Number> <sp>')' <sp> '(' <sp> <Name> <sp> ')' <instr_list>  <sp> ')'
<instr_list> 	::= <instr> | '(' <sp> <instr_list_np> <sp> ')' 
<instr_list_np> ::= <instr> | <instr> <esp> <instr_list_np>
<instr> 	::= <conditional> | <while_block> | <call> | '(' <sp> 'return' <esp> <expr> <sp> ')' | '('<sp> 'skip' <sp>')'
<conditional> 	::= '('<sp> 'if' <esp> <expr> <esp> <instr_list> <esp> <instr_list> <sp> ')' 
<while_block 	::= '(' <sp> 'while' <esp> <expr> <esp> <instr_list> <sp> ')' 
<call> 		::= <function_call> | <method_call> | <builtin_call> 
<builtin_call> 	::= <assignment> | <read_call> | <write_call> | <arithmetic>
<assignment> 	::= '(' <sp> 'set' <esp> <Id> <esp> <expr> <sp> ')' |   '(' <sp> 'set' <esp> <Id>'.'<expr> <esp> <expr> <sp> ')' |   '(' <sp> 'set' <esp> 'this' '.' <expr> <esp> <expr> <sp> ')'
<read_call>  	::= '(' <sp> read <sp> ')' 
<write_call> 	::= '(' <sp> write <esp> <expr> ')'
<arithmetic> 	::= <binary> | <unary>
<binary 	::= '(' <sp> <bin_id> <esp> <expr> <esp> <expr> <sp> ')'
<unary>  	::=  '(' <sp> <un_id> <esp> <expr> <sp> ')'
<user_call>  	::= '(' <sp> <Id> <esp> <expr_list_np> <sp> ')' |   '(' <sp> <Id> <sp> ')' 
<expr_list_np> 	::=  <expr> | <expr> <esp> <expr_list_np>
<method_call>  	::= '(' <sp> <Id>'.'<Id> <esp> <expr_list_np> <sp> ')' |   '(' <sp>'super''.'<Id><esp><expr_list_np> <sp> ')' 
<expr> 		::= <call>  | <Integer> | 'null' | 'true' | 'false' | 'this' | <Id> | <Id>'.'<expr> | 'this'.<expr> 