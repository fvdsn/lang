[
	Ce programme montre un exemple
	de quick sort avec une générère avec
	une fonction "pseudo alétoire"
]

(
	(fun (# val) (
		(set n (new 2))
		(set n.1 val)
		(set n.2 null)
		(return n)
	)) 
	
	[
		@param N une liste 
		@post imprime la liste
	]
	(fun (Print N)(
		
		(if (! (= N null)) ( 
			(write N.1)
			(Print N.2)
		))
	))
	
	[
		Ajoute la valeur val à la liste N2
	]
	(fun (#> Val N2) 
		(return (-> (# Val) N2)) 
	)
	
	[
		ajoute N2 à la suite du noeud N1
	]
	(fun (-> N1 N2) (
		(set N1.2 N2)
		(return N1)
	))
	
	
	(fun (Join L1 L2) (
		
		(if (= L1 null) (return L2) )
		(set R L1)
		(set Temp L1.2)
		(while (!(= Temp null)) (
			
			(set L1 L1.2)
			(set Temp L1.2)
		))
		(set L1.2 L2)
		(return R)
	))
	
	(fun (Qsort L) (
		
		(if (= L null) (return null))
		(if (= L.2 null) (return L))
			
		(set Pivot L.1)
		(set L L.2)
		(set L1 null)
		(set L2 null)
		(while (!(= L null)) (

		      (if (<= L.1 Pivot) 
				 
				(set L1 (#> L.1 L1))
				(set L2 (#> L.1 L2))
			)
			(set L L.2)
		))
		(return (Join (Qsort L1) (Join (# Pivot) (Qsort L2 ))))
	))


	(fun (main) (
		(set i (read))
		(write (random 1000 3))
		(set List (# 2))
		[(set i b)]
		(set seed 8)
		(while (> i 0) (
			(set seed (random 1000 seed))
			(set List (#> seed List)) 
			(set i (- i 1))
		))
		
		
		[(Print List)]
		(write -3)	
		(set a (Qsort List))
		[(Print List)]

		
		(write 0)
		
		
		
	))

	[******************************************
		Fonction pseudo random
		@param max : le nombre max
		@param seed : la graine de départ
	******************************************]
	(fun (random max seed)  
		(return (% (+ 67 (* 13 seed)) max))
	) 
)
